name: pipeline
on:
  schedule:
    - cron:  '0 8 * * *'
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  ubuntu-jammy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ 'amd64', 'arm64']
    name: Build on Ubuntu 22.04 for linux/${{ matrix.version }}
    env:
      os: "ubuntu"
      version: "22.04"
      alias: "jammy"
      platform: "linux/${{ matrix.version }}"
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU 
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-central-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/s6w2n1r6
      
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./Dockerfiles/${{ env.os }}/${{ env.version }}
          file: ./Dockerfiles/${{ env.os }}/${{ env.version }}/Dockerfile
          platforms: ${{ env.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            public.ecr.aws/s6w2n1r6/codebuild-${{ matrix.version }}-${{ env.os }}:latest
            public.ecr.aws/s6w2n1r6/codebuild-${{ matrix.version }}-${{ env.os }}:${{ env.version }}
            public.ecr.aws/s6w2n1r6/codebuild-${{ matrix.version }}-${{ env.os }}:${{ env.alias }}
